# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Publish

on:
  workflow_dispatch:
  push:
    branches:
      - master
    # paths:
    #   - 'native-app/**'
    #   - 'chrome-extension/**'
    #   - '!native-app/README.md'
    #   - '!chrome-extension/README.md'
    #   - '.github/workflows/publish.yml'

jobs:
  build-native-app:
    runs-on: windows-2022
    env:
      MYSTIC_LIGHT_SDK_PATH: ${{ github.workspace }}/sdk
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          # TODO: only 1.64.0 as there is an warning: the following packages contain code that will be rejected by a future version of Rust: winapi v0.2.8
          toolchain: 1.64.0
      # - name: Set version
      #   run: |
      #     cargo install cargo-edit
      #     cargo set-version ${{ needs.get-version.outputs.version }}
      - name: Build
        run: cargo build --release --bin install --bin uninstall --bin service
      - name: Create artifact for manifest
        uses: actions/upload-artifact@v3
        with:
          name: manifests
          path: Cargo.*
          retention-days: 1
      - name: Generate Installer
        run: iscc.exe installer/inno-setup.iss
      - name: Create artifact from installer
        uses: actions/upload-artifact@v3
        with:
          name: installer
          path: dist/
          retention-days: 1

  # release:
  #   runs-on: windows-2022
  #   needs:
  #     - build-native-app
  #   steps:
  #     - name: Generate Token
  #       id: generate-token
  #       uses: tibdex/github-app-token@v1
  #       with:
  #         app_id: ${{ secrets.TOKEN_APP_ID }}
  #         private_key: ${{ secrets.TOKEN_APP_PRIVATE_KEY }}
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         token: ${{ steps.generate-token.outputs.token }}
  #     - name: Get installer artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: installer
  #         path: dist
  #     - name: Get extension artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: extension
  #         path: dist
  #     - name: Get manifests artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: manifests
  #         path: manifests
  #     - name: Restore manifests
  #       shell: bash
  #       run: |
  #         mv manifests/Cargo.* native-app/
  #         mv manifests/package.json chrome-extension/package.json
  #     - name: Release
  #       uses: cycjimmy/semantic-release-action@v3
  #       id: release
  #       env:
  #         GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
  #       with:
  #         extra_plugins: |
  #           @semantic-release/changelog
  #           @semantic-release/git
  #           conventional-changelog-conventionalcommits
  #     - name: Browser Platform Publish
  #       uses: PlasmoHQ/bpp@v2
  #       with:
  #         artifact: dist/mystic-light-browser-cinema-extension-${{ needs.get-version.outputs.version }}.zip
  #         keys: ${{ secrets.BROWSER_PUBLISH_KEYS }}
